classDiagram
    %% Abstract class example
	%% <<abstract>> creates an abstract class stereotype
    class User {
        <<abstract>>
        -id: String
        -email: String
        -name: String
        +login()
        +logout()
    }
    
    %% Regular classes
    %% - = private, + = public, # = protected
    class Student {
        -studentId: String
        -major: String
        +enrollInCourse()
        +viewGrades()
    }
    
    class Instructor {
        -employeeId: String
        -department: String
        +createCourse()
        +gradeStudent()
    }
    
    class Course {
        -courseId: String
        -title: String
        -credits: int
        -maxStudents: int
        +addStudent()
        +removeStudent()
    }
    
    class Enrollment {
        -enrollmentDate: Date
        -grade: String
        +calculateGPA()
    }
    
    %% Enumeration example
	%% <<enumeration>> creates enum stereotype
    class CourseStatus {
        <<enumeration>>
        OPEN
        CLOSED
        CANCELLED
    }
    
    %% Relationships
	%% <|-- = inheritance (extends)
    User <|-- Student
    User <|-- Instructor
    
	%% --> = association with multiplicity
	%% "1" = exactly one, "0..*" = zero or more
    Student "1" --> "0..*" Enrollment
    Course "1" --> "0..*" Enrollment
    Instructor "1" --> "0..*" Course

	%% Simple association.
    Course --> CourseStatus